1 se agrego otros mensajes de idioma en sorces lang
2 rutas basicas con datos por defecto u omitidos
3 el namespace sirve para que las clases y metodos se puedan usar donde se declara
el namespace.
4 el controlador basico sirve para manejar las peticiones del cliente y se 
manda llamra sus metods con @.
5 php artisan make:controller TraineController --resource para crea
un controller que ayuda al generar CRUD
6 el controller resource tine unas palabras especiales para acceder 
a sus diferentes funciones por ejemmplo sin poner ninguna palabra 
accedemos ala funcin index.
7 podemos mandar llamar vistas dentro de carpetas concatenadno el nombre de la carpeta.
y el de la vista.
8 se pueden crear templetes las cuales tineen que ser importantadas con @xtends y
cada campo de estas puede ser usadas con @section('content') lo cual infla el templete en ese lugar
especifico
9 se uso un @csrf para impedir inyeccion de codigo.
se uso la funcion store cuando se llama un post desde un formuliario.
10 hay un modelo de el cual descrube la base de datos y metodos que son llamados de este para 
crear eliminar etc este es llamado migration
10 para hacer una peticion ala base de datos se puede usar
un modelo el cual es un objeto que describe los objetos dentro
de una base de datos este al ser llamdo crea o le datos dentro 
de la base de datos.
11 se puede agregar un campo a una tabla a traves de una migration php artisan make:migration add_avatar_to_trainer_table --table=trainers
12 para dar efecto una migracion damos el comando php artisan migrate.
13 se pueden subir archivos al servidor usando move(public_path().'/images/',$name); moviendo el archivo
que se recibe de un formulario el elemento file del request.
14 para usar css u otros recoursos se redirecionana la carpeta public pero a la hora de ser 
llamados solo se el nombre de la carpeta dentro de la carpeta public.
15 se puede buscar un elmenot  por id usando la funcion del modelo find 
y los datos obtenidos de aqu√≠ usarlos para inflar una clase
16 cuando hacemos una migration tambien debemos especificar que
pasa cuando la desahacemos o down es decir que elimine lo creado
en la base de datos.
17 se puede crear un slug el cual es un valor en la base de datos el cual se usa como si fuera una id 
pero sirve para ser visto como ruta es decir que en las rutas de los parametros de la base de datos 
no sea visible el id el cual es informacion sensible.   
18 implicit binding sirve para declarar en el modelo metodos que llaman datos de una base de datos
por medio de slugs.
19  @method('PUT') sirve para mandar de forma discreta peticiones sin que sean vistas
20 se puede usar una agregar una vista blade dentro de otra de la forma @include('trainers.form')
21 se puede separar la logica de validadicon en un archivo que se llama request el cual se genera con 
php artisan make:request StoreTrainerReques, y entonces la funcion del controlador que use request se puede
cambiar a que use el reques que nosotros creamos el cual es StoreTrainerReques.